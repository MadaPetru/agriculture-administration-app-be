# Use postgres/example user/password credentials
version: '3.9'

services:
  #  app:
  #    image: 'agro-admin-be'
  #    build:
  #      context: .
  #    container_name: agro-admin-be
  #    depends_on:
  #      - db
  #    ports:
  #      - "8080:8080"
  db:
    image: mcr.microsoft.com/mssql/server:2019-latest
    restart: always
    container_name: agro-admin-db
    networks:
      - agro-admin-network
    ports:
      - '1433:1433'
    environment:
      # Username is 'SA'
      MSSQL_SA_PASSWORD: 'passwordAAA111!!!'
      ACCEPT_EULA: 'Y'
      MSSQL_TLS_VERSION: '1.0'  # Disables enforcing higher TLS versions
      MSSQL_DISABLE_ENCRYPTION: 'true'  # Disables encryption (optional, may not always apply)
    volumes:
      - sqlserver:/var/opt/mssql
  azure_blob_storage:
    image: mcr.microsoft.com/azure-storage/azurite
    restart: always
    container_name: agro-admin-blob-storage
    environment:
      AZURE_STORAGE_ACCOUNT: 'adi'
      AZURE_STORAGE_KEY: 'key'
      AZURITE_ACCOUNTS: 'adi:key'
    ports:
      - '10000:10000'
      - '10001:10001'
      - '10002:10002'
    volumes:
      - ./azurite:/workspace
  redis:
    container_name: agro-admin-cache
    image: redis
    ports:
      - '6379:6379'
    command: [ "redis-server", "--appendonly", "yes" ] # Enables AOF persistence
    volumes:
      - 'redis_data:/data'

#  keycloak:
#    container_name: keycloak-agro-admin
#    image: quay.io/keycloak/keycloak:24.0.2
#    ports:
#      - 9090:8080
#    environment:
#      KEYCLOAK_ADMIN: admin
#      KEYCLOAK_ADMIN_PASSWORD: admin
#    networks:
#      - agro-admin-network
#    command:
#      - "start-dev"
#    volumes:
#      - ./keycloak:/opt/jboss/keycloak/standalone/data/
volumes:
  sqlserver:
  keycloak:
  redis_data:
    driver: local
networks:
  agro-admin-network: